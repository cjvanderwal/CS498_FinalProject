var apartmentCloudControllers=angular.module("apartmentCloudControllers",[]);apartmentCloudControllers.controller("LoginSignupController",["$scope","$http","Users",function($scope,$http,Users){$scope.newUser=!0,$scope.username="",$scope.email="",$scope.password="",$scope.name="",$scope.registerStatus="",$scope.loginStatus="",$scope.signUp=function(){$scope.newUser=!0},$scope.signIn=function(){$scope.newUser=!1},$scope.register=function(){Users.addUser({name:$scope.name,username:$scope.username,password:$scope.password,email:$scope.email}).then(function(response){$scope.registerStatus=response.data.message},function(error){$scope.registerStatus=error.data.message})}}]),apartmentCloudControllers.controller("ApartmentDetailsController",["$scope","$http","$routeParams","Apartments","Comments",function($scope,$http,$routeParams,Apartments,Comments){$scope.ratingsBreakdown=[0,0,0,0,0],$scope.labels=["1 star","2 stars","3 stars","4 stars","5 stars"],$scope.comment_title="",$scope.comment_text="",$scope.comment_rating=0,$scope.ratingStatus="",$scope.addComment=function(){return""===$scope.comment_title||""===$scope.comment_text||0===$scope.comment_rating?void(0===$scope.comment_rating&&($scope.ratingStatus="Please rate the apartment!")):void Comments.add({apartmentId:$scope.apartment.apartmentId,userID:_____,rating:$scope.comment_rating,title:$scope.comment_title,comment:$scope.comment_text})},Apartments.getDetails($routeParams.aptID).success(function(response){$scope.apartment=response.data,$scope.startDate=$scope.apartment.startLease.split("T")[0],$scope.endDate=$scope.apartment.endLease.split("T")[0]}),Comments.getByApt($routeParams.aptID).success(function(response){$scope.commentList=response.data;for(var i=0;i<$scope.commentList.length;i++){var curr_rating=$scope.commentList[i].rating;curr_rating>0&&5>=curr_rating&&($scope.ratingsBreakdown[curr_rating-1]+=1)}})}]),apartmentCloudControllers.controller("UserDetailsController",["$scope","$rootScope","$http","$routeParams","Users",function($scope,$rootScope,$http,$routeParams,Users){$scope.changePassword=!1,$scope.changePicture=!1,$scope.newPassword="",$scope.newPicture="",$scope.passStatus="",$scope.picStatus="",$scope.profile=!1,$http.get("/profile").success(function(data){data.error?(console.log(data.error),alert(data.error)):($scope.profile=!0,$rootScope.user=data.user)}),$scope.updatePassword=function(){$scope.user.password=$scope.newPassword,Users.modifyUser($scope.user).success(function(response){$scope.passStatus="password updated!"})},$scope.updatePicture=function(){$scope.user.picture_url=$scope.newPicture,Users.modifyUser($scope.user).success(function(response){$scope.picStatus="picture updated!"})}}]),apartmentCloudControllers.controller("SubleaseController",["$scope","$http","$routeParams","Apartments",function($scope,$http,$routeParams,Apartments){$scope.createSublease=function(){Apartments.addSublease({name:$scope.name,address:$scope.address,price:$scope.price,company:"Sublease",noOfBedroom:$scope.bedrooms,noOfBathRoom:$scope.bathrooms,startLease:$scope.startDate,endLease:$scope.endDate,image:$scope.image}).then(function(response){$scope.registerStatus=response.data.message},function(error){$scope.registerStatus=error.data.message})}}]),apartmentCloudControllers.controller("FrontPageController",["$scope","$http","Map","Date","Apartments",function($scope,$http,Map,Date,Apartments){$http.get("http://localhost:4000/api/apartment/").then(function(apartments){$scope.apartments=apartments.data,$scope.numBedrooms="",$scope.numBathrooms="",$scope.geocoder=new google.maps.Geocoder,$scope.errorMessage=""})["catch"](function(err){console.log("failure")}),$scope.getNumMessage=function(numApts){return 0==numApts?"No apartments matched your search.":numApts+" apartment(s) matched your search."},$scope.filterRange=function(string){var nowhitespace=string.replace(/ /g,"");return nowhitespace.split("-")},$scope.filterBedrooms=function(apt){if($scope.errorMessage="",void 0===$scope.numBedrooms||0==$scope.numBedrooms.length)return!0;var bedStrings=$scope.filterRange($scope.numBedrooms);return 1==bedStrings.length?apt.noOfBedroom==parseInt(bedStrings[0]):2!=bedStrings.length?($scope.errorMessage="Please enter a valid bedroom range.",!1):apt.noOfBedroom>=parseInt(bedStrings[0])&&apt.noOfBedroom<=parseInt(bedStrings[1])},$scope.filterBathrooms=function(apt){if($scope.errorMessage="",void 0===$scope.numBathrooms||0==$scope.numBathrooms.length)return!0;var bathStrings=$scope.filterRange($scope.numBathrooms);return 1==bathStrings.length?apt.noOfBathRoom==parseInt(bathStrings[0]):2!=bathStrings.length?($scope.errorMessage="Please enter a valid bathroom range.",!1):apt.noOfBathRoom>=parseInt(bathStrings[0])&&apt.noOfBathRoom<=parseInt(bathStrings[1])},$scope.filterPrice=function(apt){return $scope.errorMessage="",void 0!==$scope.priceLower&&0!=$scope.priceLower.length||void 0!==$scope.priceUpper&&0!=$scope.priceUpper.length?void 0===$scope.priceLower||0==$scope.priceLower.length||void 0===$scope.priceUpper||0==$scope.priceUpper.length?($scope.errorMessage="Please enter a valid price range.",!1):apt.price>=$scope.priceLower&&apt.price<=$scope.priceUpper:!0},$scope.filterMap=function(apt){return void 0===$scope.currPoly?!0:((void 0===apt.lat||void 0===apt.lon)&&$scope.geocoder.geocode({address:apt.address},function(results,status){status==google.maps.GeocoderStatus.OK?(apt.lat=results[0].geometry.location.lat(),apt.lon=results[0].geometry.location.lng(),Apartments.modifyApt(apt).then(function(response){console.log("Apartment lat/lng added"),$scope.$apply()},function(error){console.log(error.data.message)})):console.log("Geocode was not successful for the following reason: "+status)}),google.maps.geometry.poly.containsLocation(new google.maps.LatLng(apt.lat,apt.lon),$scope.currPoly))},$scope.readableDate=function(date){return Date.formatDate(date)},$scope.init=function(){Map.initialize($scope),$(document).foundation()},$scope.init()}]);