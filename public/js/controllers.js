var mp4Controllers=angular.module("mp4Controllers",[]);mp4Controllers.controller("UsersController",["$scope","$http","Users","Tasks",function($scope,$http,Users,Tasks){Users.getAll().success(function(response){$scope.userList=response.data}),$scope.removeUser=function(id){Tasks.getByQuery({assignedUser:id}).success(function(tasks_obj){for(var i=0;i<tasks_obj.data.length;i++)tasks_obj.data[i].assignedUser="",tasks_obj.data[i].assignedUserName="unassigned",Tasks.edit(tasks_obj.data[i]).success(function(add_response){});Users.remove(id).success(function(delete_response){Users.getAll().success(function(get_response){$scope.userList=get_response.data})})})}}]),mp4Controllers.controller("AddUserController",["$scope","$http","Users",function($scope,$http,Users){$scope.name="",$scope.email="",$scope.addUser=function(){Users.add({name:$scope.name,email:$scope.email}).then(function(response){$scope.status=response.data.message},function(error){$scope.status=error.data.message})}}]),mp4Controllers.controller("ProfileController",["$scope","$http","$routeParams","Users","Tasks",function($scope,$http,$routeParams,Users,Tasks){Users.getById($routeParams.userID).success(function(response){$scope.user=response.data}),Tasks.getByQuery({assignedUser:$routeParams.userID,completed:!1}).success(function(response){$scope.incompleteTaskList=response.data}),$scope.showCompleted=function(){Tasks.getByQuery({assignedUser:$routeParams.userID,completed:!0}).success(function(response){$scope.completeTaskList=response.data})},$scope.completeTask=function(id){Tasks.getById(id).success(function(obj){obj.data.completed=!0,Tasks.edit(obj.data).success(function(edit_response){Tasks.getByQuery({assignedUser:$routeParams.userID,completed:!1}).success(function(getall_response){$scope.incompleteTaskList=getall_response.data})});var index=$scope.user.pendingTasks.indexOf(id);index>-1&&$scope.user.pendingTasks.splice(index,1),Users.put($scope.user).success(function(response){})})}}]),mp4Controllers.controller("TasksController",["$scope","$window","Tasks","Users",function($scope,$window,Tasks,Users){$scope.currSkip=0,$scope.taskType="false",$scope.sortBy="dateCreated",$scope.direction="1",Tasks.getByNum($scope.currSkip,10).success(function(response){$scope.taskList=response.data}),$scope.removeTask=function(id){Tasks.getById(id).success(function(get_task_response){$scope.ownerID=get_task_response.data.assignedUser,""!=$scope.ownerID&&Users.getById($scope.ownerID).success(function(get_user_response){$scope.owner=get_user_response.data;var index=$scope.owner.pendingTasks.indexOf(id);index>-1&&$scope.owner.pendingTasks.splice(index,1),Users.put($scope.owner).success(function(put_response){})})}),Tasks.remove(id).success(function(delete_response){Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(get_response){$scope.taskList=get_response.data})})},$scope.$watch("taskType",function(){$scope.currSkip=0,void 0!=$scope.taskType?$scope.currQuery={where:{completed:$scope.taskType}}:$scope.currQuery={where:{completed:{$in:[!0,!1]}}},Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response){$scope.numTasks=response.data.length,Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response2){$scope.taskList=response2.data,document.getElementById("prev-task-button").className="disabled button",document.getElementById("next-task-button").className="secondary button"})})}),$scope.$watch("sortBy",function(){$scope.currQuery={where:{completed:$scope.taskType},limit:10},Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response){$scope.taskList=response.data})}),$scope.$watch("direction",function(){Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response){$scope.taskList=response.data})}),$scope.nextPage=function(){return $scope.currSkip+10>=$scope.numTasks?void(document.getElementById("next-task-button").className="disabled button"):($scope.currSkip+20>=$scope.numTasks&&(document.getElementById("next-task-button").className="disabled button"),document.getElementById("prev-task-button").className="secondary button",$scope.currSkip+=10,$scope.currQuery={where:{completed:$scope.taskType},limit:10},void Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response){$scope.taskList=response.data}))},$scope.prevPage=function(){return $scope.currSkip<=0?void(document.getElementById("prev-task-button").className="disabled button"):($scope.currSkip<=10&&(document.getElementById("prev-task-button").className="disabled button"),document.getElementById("next-task-button").className="secondary button",$scope.currSkip-=10,$scope.currQuery={where:{completed:$scope.taskType},limit:10},void Tasks.getByPagination($scope.currSkip,$scope.sortBy,$scope.currQuery,$scope.direction).success(function(response){$scope.taskList=response.data}))}}]),mp4Controllers.controller("AddTaskController",["$scope","$window","Tasks","Users",function($scope,$window,Tasks,Users){$scope.name="",$scope.desc="",$scope.deadline="",$scope.userID="",Users.getAll().success(function(response){$scope.userList=response.data}),$scope.addTask=function(){Users.getById($scope.userID).success(function(response){$scope.user=response.data,$scope.userName=response.data.name,Tasks.add({name:$scope.name,description:$scope.desc,deadline:$scope.deadline,assignedUser:$scope.userID,assignedUserName:$scope.userName}).then(function(response){$scope.status=response.data.message,$scope.taskID=response.data.data._id,void 0!=$scope.user&&($scope.user.pendingTasks.push($scope.taskID),Users.put($scope.user).success(function(response){}))},function(error){$scope.status=error.data.message})})}}]),mp4Controllers.controller("TaskController",["$scope","$window","$routeParams","Tasks",function($scope,$window,$routeParams,Tasks){Tasks.getById($routeParams.taskID).success(function(response){$scope.task=response.data})}]),mp4Controllers.controller("EditTaskController",["$scope","$window","$routeParams","Tasks","Users",function($scope,$window,$routeParams,Tasks,Users){Users.getAll().success(function(response){$scope.userList=response.data,Tasks.getById($routeParams.taskID).success(function(response){$scope.task=response.data,""!=$scope.task.assignedUser&&Users.getById($scope.task.assignedUser).success(function(response){$scope.orig_owner=response.data})})}),$scope.editTask=function(){Users.getById($scope.task.assignedUser).success(function(response){if($scope.owner=response.data,$scope.task.assignedUserName=$scope.owner.name,void 0!=$scope.orig_owner)if($scope.orig_owner._id!=$scope.owner._id){var index=$scope.orig_owner.pendingTasks.indexOf($scope.task._id);index>-1&&$scope.orig_owner.pendingTasks.splice(index,1),$scope.owner.pendingTasks.push($scope.task._id),Users.put($scope.orig_owner).success(function(put_reponse){}),$scope.task.completed===!1&&Users.put($scope.owner).success(function(put_response){})}else $scope.task.completed===!1&&-1===$scope.owner.pendingTasks.indexOf($scope.task._id)?($scope.owner.pendingTasks.push($scope.task._id),Users.put($scope.owner).success(function(put_response){})):$scope.task.completed===!0&&$scope.owner.pendingTasks.indexOf($scope.task._id)>-1&&($scope.owner.pendingTasks.splice(index,1),Users.put($scope.owner).success(function(put_response){}));else void 0!=$scope.owner&&$scope.task.completed===!1&&($scope.owner.pendingTasks.push($scope.task._id),Users.put($scope.owner).success(function(put_response){}));Tasks.edit($scope.task).then(function(response){$scope.status=response.data.message},function(error){$scope.status=error.data.message})})}}]),mp4Controllers.controller("SettingsController",["$scope","$window",function($scope,$window){$scope.url=$window.sessionStorage.baseurl,$scope.changeUrl=function(){$window.sessionStorage.baseurl=$scope.url,$scope.status="URL set"}}]);